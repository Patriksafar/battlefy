{"version":3,"sources":["components/header/header.styles.ts","components/header/header.tsx","routes/paths.ts","routes/homepage/homepage.tsx","routes/profile/profile.tsx","routes/auth/login.tsx","routes/auth/register.tsx","components/navigation/navigation.styles.ts","components/navigation/navigation.tsx","App.tsx","serviceWorker.js","index.js"],"names":["root","css","container","containerContent","landingImage","landingImageContent","useStyles","makeStyles","display","flexDirection","justifyContent","Header","title","image","children","subtitle","classesOver","className","classes","src","alt","Container","cx","Typography","variant","gutterBottom","paths","maxWidth","media","height","Homepage","tournaments","map","item","console","log","TournamentCard","Card","CardActionArea","CardMedia","CardContent","component","color","CardActions","Button","size","onClick","navigate","Grid","spacing","index","key","Profile","Login","Register","menuMainLinks","navigationLogo","Navigation","AppBar","position","Toolbar","to","MenuItem","theme","createMuiTheme","palette","primary","main","red","typography","fontFamily","h1","fontSize","fontWeight","h2","App","ThemeProvider","path","default","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.48dc0958.chunk.js","sourcesContent":["import { css } from \"emotion\";\n\nexport const root = css`\n  position: relative;\n`;\n\nexport const container = css`\n  min-height: 540px;\n  padding: 24px;\n  z-index: 1;\n  position: relative;\n`;\n\nexport const containerContent = css`\n  max-width: 760px;\n`;\n\nexport const landingImage = css`\n  height: 100%;\n  width: 100%;\n  left: 0;\n  top: 0;\n  position: absolute;\n  z-index: 0;\n\n  &:after {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    content: \"\";\n    background: rgba(0, 15, 30, 0.6);\n  }\n`;\n\nexport const landingImageContent = css`\n  width: 100%;\n  height: 100%;\n  display: block;\n  object-fit: cover;\n`;\n","import React, { ReactNode } from \"react\";\nimport { Typography, Container, makeStyles } from \"@material-ui/core\";\n\nimport * as classes from \"./header.styles\";\nimport { cx } from \"emotion\";\n\ntype Props = {\n  title: string;\n  subtitle?: string;\n  image: string;\n  children?: ReactNode;\n};\n\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n});\n\nexport const Header = ({ title, image, children, subtitle }: Props) => {\n  const classesOver = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.landingImage}>\n        <img src={image} alt={title} className={classes.landingImageContent} />\n      </div>\n      <Container\n        classes={{ root: cx(classesOver.container, classes.container) }}\n      >\n        <div className={classes.containerContent}>\n          <Typography variant=\"h1\" gutterBottom>\n            {title}\n          </Typography>\n          {subtitle && (\n            <Typography variant=\"body1\" gutterBottom>\n              {subtitle}\n            </Typography>\n          )}\n          {children}\n        </div>\n      </Container>\n    </div>\n  );\n};\n","export const paths = {\n  index: \"/\",\n  profile: \"/profile\",\n  login: \"/login\",\n  register: \"/register\",\n};\n","import React from \"react\";\nimport { RouteComponentProps, navigate } from \"@reach/router\";\nimport {\n  Typography,\n  Button,\n  Container,\n  Card,\n  CardActionArea,\n  makeStyles,\n  CardMedia,\n  CardContent,\n  CardActions,\n  Grid,\n} from \"@material-ui/core\";\nimport { Header } from \"../../components/header\";\nimport { paths } from \"../paths\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n});\n\ntype Props = RouteComponentProps;\n// eslint-disable-next-line no-empty-pattern\nexport const Homepage = ({}: Props) => {\n  const classes = useStyles();\n  const tournaments = [\n    { title: \"FortniteNight 1\" },\n    { title: \"FortniteNight 2\" },\n    { title: \"FortniteNight 3\" },\n  ];\n\n  tournaments.map((item) => console.log(item.title));\n\n  const TournamentCard = () => {\n    return (\n      <Card className={classes.root}>\n        <CardActionArea>\n          <CardMedia\n            className={classes.media}\n            image=\"https://www.letemsvetemapplem.eu/wp-content/uploads/2018/09/Fortnite.jpg\"\n            title=\"Contemplative Reptile\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h6\" component=\"h2\">\n              Fortnite #1\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              Je tu první turnaj ve hře Fortnite. Vstup do turnaje zdarma.\n            </Typography>\n            <Typography color=\"textSecondary\" variant=\"overline\">\n              12. 3. 2020\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\">\n            Připojit\n          </Button>\n        </CardActions>\n      </Card>\n    );\n  };\n\n  return (\n    <div>\n      <Header\n        title=\"Přídej se k nám a hraj o prizemoney!\"\n        subtitle=\"Každý týden pořádáme turnaj ve hře Fortnite! Připoj se, bude to stát za to.\"\n        image=\"https://cdn2.unrealengine.com/Diesel%2Fproductv2%2Ffortnite%2Fhome%2F12BR_EGS_Launcher_G-1360x766-ffb22909a731497584be4a01d18a17a15b245923.jpg?h=1080&resize=1&w=1920\"\n      >\n        <div>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              navigate(paths.login);\n            }}\n          >\n            Nadcházející událost\n          </Button>\n        </div>\n      </Header>\n      <Container>\n        <Typography>Turnaje</Typography>\n        <Grid container spacing={3}>\n          {tournaments.map((index, item) => (\n            <Grid item key={index.title}>\n              <TournamentCard />\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { RouteComponentProps } from \"@reach/router\";\n\ntype Props = RouteComponentProps;\n// eslint-disable-next-line no-empty-pattern\nexport const Profile = ({}: Props) => {\n  return <div>hello profile</div>;\n};\n","import React from \"react\";\nimport { RouteComponentProps } from \"@reach/router\";\n\ntype Props = RouteComponentProps;\n\n// eslint-disable-next-line no-empty-pattern\nexport const Login = ({}: Props) => <div>login</div>;\n","import React from \"react\";\nimport { RouteComponentProps } from \"@reach/router\";\n\ntype Props = RouteComponentProps;\n\n// eslint-disable-next-line no-empty-pattern\nexport const Register = ({}: Props) => <div>register</div>;\n","import { css } from \"emotion\";\n\nexport const menuMainLinks = css`\n  flex-grow: 1;\n  display: flex;\n  align-items: center;\n`;\n\nexport const navigationLogo = css`\n  margin-right: 12px;\n`;\n","import React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { Link } from \"@reach/router\";\nimport { paths } from \"../../routes/paths\";\n// import classes from \"*.module.css\";\n\nimport * as classes from \"./navigation.styles\";\n\nexport const Navigation = () => {\n  return (\n    <AppBar position=\"relative\" variant=\"elevation\">\n      <Toolbar>\n        <div className={classes.menuMainLinks}>\n          <Link to={paths.index} className={classes.navigationLogo}>\n            <Typography variant=\"h6\">GameSky</Typography>\n          </Link>\n          <MenuItem>\n            <Link to={paths.profile} color=\"inherit\">\n              Profil\n            </Link>\n          </MenuItem>\n          <MenuItem>\n            <Link to={paths.profile} color=\"inherit\">\n              Turnaje\n            </Link>\n          </MenuItem>\n        </div>\n        <Button color=\"inherit\">Přihlásit</Button>\n        <Button color=\"inherit\">Registrovat</Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import React from \"react\";\nimport { Homepage } from \"./routes/homepage\";\nimport { Router } from \"@reach/router\";\nimport { Profile } from \"./routes/profile\";\nimport { Login, Register } from \"./routes/auth\";\nimport { Navigation } from \"./components\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\nimport { red } from \"@material-ui/core/colors\";\nimport { paths } from \"./routes/paths\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: red[600],\n    },\n  },\n  typography: {\n    fontFamily: \"Poppins, sans-serif\",\n    h1: {\n      fontSize: \"54px\",\n      fontWeight: 900,\n    },\n    h2: {\n      fontSize: \"40px\",\n      fontWeight: 600,\n    },\n  },\n});\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Navigation />\n      <Router>\n        <Login path={paths.login} />\n        <Register path={paths.register} />\n        <Homepage default path={paths.index} />\n        <Profile path={paths.profile} />\n      </Router>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}